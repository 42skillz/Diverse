<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Diverse</name>
    </assembly>
    <members>
        <member name="T:Diverse.Fuzzer">
            <summary>
            Allows to generate lots of combination of things. <see cref="T:Diverse.Fuzzer"/> are very useful to detect hard coded values in our implementations.
            Note: you can instantiate another Deterministic Fuzzer by providing it the Seed you want to reuse.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Seed">
            <summary>
            Generates a DefaultSeed. Important to keep a trace of the used seed so that we can reproduce a failing situation with <see cref="T:Diverse.Fuzzer"/> involved.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Diverse#IFuzz#Random">
            <summary>
            Gets the Random instance to be used when we want to create a new extension method for the <see cref="T:Diverse.Fuzzer"/>.
            <remarks>The use of explicit interface implementation for this property is made on purpose in order to hide this internal mechanic details from the Fuzzer end-user code.</remarks>
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.InternalRandom">
            <summary>
            Gives easy access to the <see cref="P:Diverse.IFuzz.Random"/> explicit implementation.
            </summary>
        </member>
        <member name="P:Diverse.Fuzzer.Log">
            <summary>
            Sets the way you want to log or receive what the <see cref="T:Diverse.Fuzzer"/> has to say about every generated seeds used for every fuzzer instance and test.
            </summary>
        </member>
        <member name="M:Diverse.Fuzzer.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
            Instantiates a <see cref="T:Diverse.Fuzzer"/>.
            </summary>
            <param name="seed">The seed if you want to reuse in order to reproduce the very same conditions of another (failing) test.</param>
            <param name="name">The name you want to specify for this <see cref="T:Diverse.Fuzzer"/> instance (useful for debuging purpose).</param>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer value between a min (inclusive) and a max (exclusive) value.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateInteger">
            <summary>
            Generates a random integer value.
            </summary>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePositiveInteger(System.Nullable{System.Int32})">
            <summary>
            Generates a random positive integer value.
            </summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A positive integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePositiveDecimal">
            <summary>
            Generates a random positive decimal value.
            </summary>
            <returns>A positive decimal value generated randomly.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateFirstName(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="gender">The <see cref="T:Diverse.Gender"/> to be used as indication (optional).</param>
            <returns>A 'Diverse' first name.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateLastName(System.String)">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="firstName">The first name of this person.</param>
            <returns>A 'Diverse' last name.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePerson(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' <see cref="T:Diverse.Person"/> (i.e. from all around the world and different cultures). 
            </summary>
            <param name="gender">The (optional) <see cref="T:Diverse.Gender"/> of this <see cref="T:Diverse.Person"/></param>
            <returns>A 'Diverse' <see cref="T:Diverse.Person"/> instance.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GenerateEMail(System.String,System.String)">
            <summary>
            Generates a random Email.
            </summary>
            <param name="firstName">The (optional) first name for this Email</param>
            <param name="lastName">The (option) last name for this Email.</param>
            <returns>A random Email.</returns>
        </member>
        <member name="M:Diverse.Fuzzer.HeadsOrTails">
            <summary>
            Flips a coin.
            </summary>
            <returns><b>True</b> if Heads; <b>False</b> otherwise (i.e. Tails).</returns>
        </member>
        <member name="M:Diverse.Fuzzer.GeneratePassword(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Generates a password following some common rules asked on the internet.
            </summary>
            <returns>The generated password</returns>
        </member>
        <member name="T:Diverse.IFuzz">
            <summary>
            Interface to build your own <see cref="T:Diverse.Fuzzer"/> through extension methods.
            </summary>
        </member>
        <member name="P:Diverse.IFuzz.Random">
            <summary>
            Gets a <see cref="P:Diverse.IFuzz.Random"/> instance to use if you want your extensible Fuzzer to be deterministic when providing a seed.
            </summary>
        </member>
        <member name="M:Diverse.IFuzz.HeadsOrTails">
            <summary>
            Flips a coin.
            </summary>
            <returns><b>True</b> if Heads; <b>False</b> otherwise (i.e. Tails).</returns>
        </member>
        <member name="T:Diverse.IFuzzNumbers">
            <summary>
            Fuzz numbers.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GenerateInteger(System.Int32,System.Int32)">
            <summary>
            Generates a random integer value between a min (inclusive) and a max (exclusive) value.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GenerateInteger">
            <summary>
            Generates a random integer value.
            </summary>
            <returns>An integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GeneratePositiveInteger(System.Nullable{System.Int32})">
            <summary>
            Generates a random positive integer value.
            </summary>
            <param name="maxValue">The inclusive upper bound of the random number returned.</param>
            <returns>A positive integer value generated randomly.</returns>
        </member>
        <member name="M:Diverse.IFuzzNumbers.GeneratePositiveDecimal">
            <summary>
            Generates a random positive decimal value.
            </summary>
            <returns>A positive decimal value generated randomly.</returns>
        </member>
        <member name="T:Diverse.IFuzzPersons">
            <summary>
            Fuzz <see cref="T:Diverse.Person"/> related information.
            </summary>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateFirstName(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' first name (i.e. from all around the world and different cultures).
            </summary>
            <param name="gender">The <see cref="T:Diverse.Gender"/> to be used as indication (optional).</param>
            <returns>A 'Diverse' first name.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateLastName(System.String)">
            <summary>
            Generates a 'Diverse' last name (i.e. from all around the world and different cultures).
            </summary>
            <param name="firstName">The first name of this person.</param>
            <returns>A 'Diverse' last name.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GeneratePerson(System.Nullable{Diverse.Gender})">
            <summary>
            Generates a 'Diverse' <see cref="T:Diverse.Person"/> (i.e. from all around the world and different cultures). 
            </summary>
            <param name="gender">The (optional) <see cref="T:Diverse.Gender"/> of this <see cref="T:Diverse.Person"/></param>
            <returns>A 'Diverse' <see cref="T:Diverse.Person"/> instance.</returns>
        </member>
        <member name="M:Diverse.IFuzzPersons.GenerateEMail(System.String,System.String)">
            <summary>
            Generates a random Email.
            </summary>
            <param name="firstName">The (optional) first name for this Email</param>
            <param name="lastName">The (option) last name for this Email.</param>
            <returns>A random Email.</returns>
        </member>
        <member name="T:Diverse.Female">
            <summary>
            Information related to female persons.
            </summary>
        </member>
        <member name="T:Diverse.Male">
            <summary>
            Information related to male persons.
            </summary>
        </member>
        <member name="T:Diverse.Person">
            <summary>
            Represent a <see cref="T:Diverse.Person"/> with some common characteristics.
            Very useful to test most of the applications dealing with humans.
            </summary>
        </member>
        <member name="P:Diverse.Person.FirstName">
            <summary>
            Gets the first name of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.LastName">
            <summary>
            Gets the last name of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.Gender">
            <summary>
            Gets the gender of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.Title">
            <summary>
            Gets the title of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.EMail">
            <summary>
            Gets the email of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="P:Diverse.Person.IsMarried">
            <summary>
            Gets whether or not the <see cref="T:Diverse.Person"/> instance is married.
            </summary>
        </member>
        <member name="P:Diverse.Person.Age">
            <summary>
            Gets the age of the <see cref="T:Diverse.Person"/> instance.
            </summary>
        </member>
        <member name="M:Diverse.Person.ToString">
            <summary>
            Returns this instance of <see cref="T:System.String"/>.
            </summary>
            <returns>The current string./</returns>
        </member>
    </members>
</doc>
